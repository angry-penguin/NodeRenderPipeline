#pragma kernel Math

#pragma multi_compile _ DIMENSION_3D

#ifdef DIMENSION_3D
	typedef uint3 IdType;
	typedef RWTexture3D<float> OutputType;
	typedef Texture3D<float> InputType;
#else
	typedef uint2 IdType;
	typedef RWTexture2D<float> OutputType;
	typedef Texture2D<float> InputType;
#endif

OutputType Result;
InputType InputA, InputB;
uint Operation;

[numthreads(8, 8, 1)]
void Math(IdType id : SV_DispatchThreadID)
{
	float inputA = InputA[id];
	float inputB = InputB[id];
	float result = 0;

	switch(Operation)
	{
		case 0:
			result = inputA + inputB;
			break;
		case 1:
			result = inputA - inputB;
			break;
		case 2:
			result = inputA * inputB;
			break;
		case 3:
			result = inputA / inputB;
			break;
		case 4:
			result = fmod(inputA, inputB);
			break;
		case 5:
			result = pow(max(0, inputA), inputB);
			break;
		case 6:
			result = min(inputA, inputB);
			break;
		case 7:
			result = max(inputA, inputB);
			break;
	}

	Result[id] = result;
}